# -*- coding: utf-8 -*-
"""Copy of 3_Join datasets with further data clean.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BV91PbgiAumMqAYbyrqM8YIOfhYr6sUP

# **Application for real-time fraudulent transaction detection**
"""

# Commented out IPython magic to ensure Python compatibility.
### import libraries ###

import numpy as np
import pandas as pd

import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

# # # Run it if it is the first time you running this notebook.

# # # Mount your google drive to colab
from google.colab import drive
drive.mount('/content/drive')

# Before you run the code below,
# Please create a shortcut for the 'Capstone' folder from shared drive to your own Googledrive.


clean_id = pd.read_csv('/content/drive/MyDrive/Capstone/Data/clean_train_id.csv')
clean_id.name = 'clean_id'
# clean_train_id.head()

clean_trans = pd.read_csv('/content/drive/MyDrive/Capstone/Data/clean_train_trans.csv')
clean_trans.name = 'clean_trans'
# clean_trans.head()

# Dataset is now stored in a Pandas Dataframe

clean_id.drop(columns=['Unnamed: 0'], inplace=True) # drop index col

# fill object cols with str 'NA'
cols = clean_id.columns.to_list()
for col in cols:
  if clean_id[col].dtype == 'O':
    clean_id[col].fillna('NA_', inplace=True)

clean_trans.drop(columns=['Unnamed: 0'], inplace=True) # drop index col

# fill object cols with str 'NA'
cols = clean_trans.columns.to_list()
for col in cols: 
  if clean_trans[col].dtype == 'O': # condition 1
    clean_trans[col].fillna('NA_', inplace=True)
  elif str(col).startswith( 'V' ): # condition 2.a
    clean_trans[col].fillna(-1, inplace=True)

##test and see if the code works
#clean_trans['card4'].unique()

# #column dist1 and D11 only has Nan in df_joinã€‚
# df_join=df_join.drop(columns=['dist1', 'D11'], inplace=False)

# Define X and y
from sklearn.model_selection import train_test_split

X = df_join.drop(columns=['TransactionID', 'isFraud'], inplace=False) # drop id and label
y = df_join['isFraud']

# X.dtypes.unique()

"""#### Save 'X_raw.csv' and 'y_raw.csv' before get dummies

"""

# X.to_csv('X_raw.csv')
# !cp X_raw.csv "drive/MyDrive/Capstone/Data/"

# y.to_csv('y_raw.csv')
# !cp y_raw.csv "drive/MyDrive/Capstone/Data/"